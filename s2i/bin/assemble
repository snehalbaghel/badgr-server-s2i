#!/bin/bash -e
#
# S2I assemble script for the 'badgr-server-s2i' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

shopt -s dotglob

# If the 'badgr-server-s2i' assemble script is executed with the '-h' flag, print the usage.
if [[ "$1" == "-h" ]]; then
	exec /usr/libexec/s2i/usage
fi

# Restore artifacts from the previous build (if they exist).
#
if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
  echo "---> Restoring build artifacts..."
  mv /tmp/artifacts/* ./
fi

echo "---> Installing application source..."
cp -Rf /tmp/src/. ./

# set permissions for any installed artifacts
fix-permissions /opt/app-root -P

echo "---> Upgrading pip3 to latest version ..."
pip3 install -U pip setuptools wheel

echo "---> Building application from source..."

# Copy uwsgi config
mv .openshift/uwsgi.ini ./
mv .docker/etc/wsgi.py ./
# mkdir -p /etc/nginx \
  # && cp .docker/etc/nginx.conf  /etc/nginx/nginx.conf
# mkdir -p /etc/sites-available \
  # && cp .docker/etc/site.conf /etc/nginx/sites-available/
# mkdir -p /etc/nginx/sites-enabled/ \
  # && ln -s /etc/nginx/sites-available/site.conf /etc/nginx/sites-enabled/


# Copy settings
SETTINGS_FILE_PATH=${APP_HOME:-.openshift/settings_local.dev.py.example}
echo "---> Copying settings from $SETTINGS_FILE_PATH"
cp $SETTINGS_FILE_PATH ./apps/mainsite/settings_local.py

pip3 install uwsgi
pip3 install -r requirements.txt

python manage.py migrate
python manage.py dist
python manage.py collectstatic

chmod og+rwx ./logs/badgr_events.log
